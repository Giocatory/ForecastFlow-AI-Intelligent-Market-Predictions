import streamlit as st
import hashlib
import json
import os

USERS_FILE = "users.json"

def init_session_state():
    if 'authenticated' not in st.session_state:
        st.session_state.authenticated = False
    if 'username' not in st.session_state:
        st.session_state.username = ''
    if 'tokens' not in st.session_state:
        st.session_state.tokens = {}

def load_users():
    if os.path.exists(USERS_FILE):
        with open(USERS_FILE, 'r') as f:
            return json.load(f)
    return {}

def save_user(username, password):
    users = load_users()
    users[username] = {
        'password': hashlib.sha256(password.encode()).hexdigest()
    }
    with open(USERS_FILE, 'w') as f:
        json.dump(users, f)

def authenticate(username, password):
    users = load_users()
    if username in users:
        return users[username]['password'] == hashlib.sha256(password.encode()).hexdigest()
    return False

def render_auth_sidebar():
    init_session_state()
    
    st.sidebar.title("üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è")
    
    if not st.session_state.authenticated:
        tab1, tab2 = st.sidebar.tabs(["–í—Ö–æ–¥", "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"])
        
        with tab1:
            username = st.text_input("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", key="login_user")
            password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password", key="login_pass")
            
            if st.button("–í–æ–π—Ç–∏", key="login_btn"):
                if username and password:
                    if authenticate(username, password):
                        st.session_state.authenticated = True
                        st.session_state.username = username
                        st.rerun()
                    else:
                        st.error("–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
                else:
                    st.error("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è")
        
        with tab2:
            new_user = st.text_input("–ù–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", key="reg_user")
            new_pass = st.text_input("–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å", type="password", key="reg_pass")
            confirm_pass = st.text_input("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å", type="password", key="confirm_pass")
            
            if st.button("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", key="reg_btn"):
                if new_user and new_pass:
                    if new_pass == confirm_pass:
                        save_user(new_user, new_pass)
                        st.success("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –¢–µ–ø–µ—Ä—å –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.")
                    else:
                        st.error("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç")
                else:
                    st.error("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è")
    else:
        st.sidebar.success(f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {st.session_state.username}!")
        
        st.sidebar.subheader("üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∏ API")
        avito_token = st.sidebar.text_input("Avito API Token", type="password")
        hh_token = st.sidebar.text_input("HH API Token", type="password")
        
        if avito_token:
            st.session_state.tokens['avito'] = avito_token
        if hh_token:
            st.session_state.tokens['hh'] = hh_token
        
        if st.sidebar.button("üö™ –í—ã–π—Ç–∏"):
            st.session_state.authenticated = False
            st.session_state.username = ''
            st.session_state.tokens = {}
            st.rerun()
    
    return st.session_state.authenticated